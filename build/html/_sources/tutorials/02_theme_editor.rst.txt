Design your first theme
=======================

A theme file is a mapping between **marker** names (like Walls, Ground, Door etc) and the meshes that you provide.    The prefabs you map here will be used to build your dungeon

.. figure:: /images/tutorial/02/theme_editor_preview.jpg
   :align: center
   
   
In the previous section, we created a dungeon with an existing theme file (CandyDungeonTheme).  In this section, we'll create one ourselves

Create a Theme File
-------------------

Create a new theme file from either the Main menu or the Create menu

.. figure:: /images/tutorial/02/create_theme_01.png
   :align: center
   
   Create from Main menu
   
.. figure:: /images/tutorial/02/create_theme_02.png
   :align: center
   
   Create from Create menu
  

This will create a theme file in the current open directory in the Projects window

.. figure:: /images/tutorial/02/03.png
   :align: center
   

Open the Theme File
-------------------

Double-click the theme file to open the **Theme Editor**.  Dock the theme editor so you can see both the Scene view and the Theme Editor at the same time

.. figure:: /images/tutorial/02/04.jpg
   :align: center
   
   
Assign the Theme File
---------------------

Destroy the existing dungeon by selecting ``DungeonGrid`` game object and click ``Destroy Dungeon`` button


Assign the theme file that you just created, on to the DungeonGrid game object

.. figure:: /images/tutorial/02/05.png
   :align: center
   

Click ``Build Dungeon`` and nothing should appear.   That's because we haven't added prefab mappings on the theme yet



Design the Theme
----------------

Navigate to ``Assets\DungeonArchitect_Samples\Demo_Theme_Candy\Prefabs``.  This folder contains a set of mesh prefabs we can use for our dungeon

.. figure:: /images/tutorial/02/06.jpg
   :align: center
   
Add Ground
^^^^^^^^^^

Drag-drop the ground prefab mesh on to the Theme Editor

.. figure:: /images/tutorial/02/07.jpg
   :align: center
   

Link up the mesh node with the ``Ground`` marker node.  When you do, you should see a live preview on the scene view with the dungeon using this ground mesh

.. figure:: /images/tutorial/02/08.jpg
   :align: center
   
For the live preview to work, make sure the "Realtime Update" button is enabled in the Theme Editor

.. figure:: /images/tutorial/02/09.jpg
   :align: center

Add More Prefabs
^^^^^^^^^^^^^^^^

Go ahead and add prefabs under the following markers: **Wall**, **Fence** and **Door**

.. figure:: /images/tutorial/02/10.jpg
   :align: center


.. figure:: /images/tutorial/02/11.jpg
   :align: center


Add Wall Pillars
^^^^^^^^^^^^^^^^

Drag drop the ``Pillar2`` prefab to the theme editor and link it to the ``WallSeparator`` marker node

.. figure:: /images/tutorial/02/12.jpg
   :align: center

We'll need to make this pillar a bit bigger. Select the node you just dropped and modify the Scale parameter under Offset category

.. figure:: /images/tutorial/02/13.jpg
   :align: center

.. figure:: /images/tutorial/02/14.jpg
   :align: center


Add Windows
^^^^^^^^^^^
We have two wall meshes in the samples folder

.. figure:: /images/tutorial/02/15.jpg
   :align: center

The other one (``Wall02``) has a window. Lets configure the theme to sometimes use this second mesh so we have windows

Drag drop ``Wall02`` prefab on to the theme editor and place it **before** the existing wall prefab node

.. figure:: /images/tutorial/02/16.jpg
   :align: center


When you connect this to the ``Wall`` marker node, you'll notice it has picked up the first node for all the walls

.. figure:: /images/tutorial/02/17.jpg
   :align: center


This is because Dungeon Architect starts executing the nodes from left to right. When the condition was satisfied to pick the first node, it stopped execution and never came to the second node. 

There are multiple ways you can control this condition, the simplest being adjusting the probablity of selection.

Select the node you just dropped and change the probability to ``0.5`` (this would mean it gets selected 50% of the time).  The other 50% of the time, it would not be selected and the execution would then move to the next node, and hence selecting the non-windowed wall node

.. figure:: /images/tutorial/02/18.png
   :align: center

.. figure:: /images/tutorial/02/19.jpg
   :align: center
   
   Half the walls have windows











